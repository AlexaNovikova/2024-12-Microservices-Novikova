apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus-users.fullname" . }}
  labels:
    {{- include "otus-users.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "otus-users.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "otus-users.labels" . | nindent 8 }}
          {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: [ 'sh', '-c', 'until nc -z -v -w30 {{ .Release.Name }}-postgresql {{ .Values.postgresql.service.port }}; do echo "Waiting for PostgreSQL..."; sleep 5; done' ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          envFrom:
            - configMapRef:
                name: postgres-conf
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf  # name of configMap
                  key: DB_HOST
            - name: DB_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: DB_SCHEMA
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: DB_NAME
            - name: DB_USERNAME  # Setting Database username from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: DB_USERNAME
            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-auth
                  key: password
            - name: POSTGRESQL_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-auth
                  key: password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
